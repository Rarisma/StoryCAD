name: AppxVersionAutoMerge

on:
  pull_request_target:
    paths:
    - 'StoryCAD/Package.appxmanifest'
    types: [opened, synchronize, reopened]

jobs:
  resolve-conflict:
    runs-on: ubuntu-latest
    steps:
    - name: PR Origin check
      run: |
        if [[ "${{ github.event.pull_request.head.repo.full_name }}" != "${{ github.repository }}" ]]; then
          echo "Error: This workflow does not process PRs from forks for security reasons."
          exit 78
        fi

    - name: Checkout code
      uses: actions/checkout@v2
      with:
        ref: ${{ github.head_ref }}

    - name: Resolve merge conflict based on version
      run: |
        # Absolute path to the manifest
        MANIFEST_PATH="${{ github.workspace }}/StoryCAD/Package.appxmanifest"

        # Check if the manifest exists
        if [[ ! -f $MANIFEST_PATH ]]; then
            echo "Error: $MANIFEST_PATH does not exist!"
            exit 1
        fi

        # Check if the file has a conflict
        if grep -q '<<<<<<< ' $MANIFEST_PATH; then

          # Debug: Print the content of the file
          echo "-------File Content Start--------"
          cat $MANIFEST_PATH || echo "Failed to print the content of $MANIFEST_PATH"
          echo "-------File Content End--------"

          # Extract both versions
          VERSION1=$(grep -oP '(?<=Version=")[^"]*' $MANIFEST_PATH | sed -n '1p')
          VERSION2=$(grep -oP '(?<=Version=")[^"]*' $MANIFEST_PATH | sed -n '2p')

          # Debug: Print the extracted versions
          echo "Version 1: $VERSION1"
          echo "Version 2: $VERSION2"

          HIGHER_VERSION=$(printf "%s\n%s\n" $VERSION1 $VERSION2 | sort -V | tail -1)

          # Debug: Print the higher version
          echo "Higher Version: $HIGHER_VERSION"

          # Replace the conflicting lines with the higher version
          sed -i "/<<<<<<< /,/>>>>>>> /c\    <Identity Name=\"34432StoryBuilder.StoryBuilder\" Publisher=\"CN=34A1944E-942C-4545-B217-ECE68E54ACF8\" Version=\"$HIGHER_VERSION\" />" $MANIFEST_PATH

          # Debug: Print the content of the file after the sed command
          echo "-------Updated File Content Start--------"
          cat $MANIFEST_PATH
          echo "-------Updated File Content End--------"

          # Commit the changes
          git config user.name 'Github Action'
          git config user.email 'action@github.com'
          git add $MANIFEST_PATH
          git commit -m 'Resolved version conflict'
          git push
        else
          # Debug: No merge conflict found
          echo "No merge conflict found in $MANIFEST_PATH"
        fi
